{"version":3,"file":"esri-language.js","sources":["../node_modules/domose/domose.js","dependent-js/language.js"],"sourcesContent":["/* Speculative DOM Functionality\n/* ========================================================================== */\n\nfunction __assignSource(element, source, prefix) {\n\tfor (let key in source) {\n\t\tif ('function' === typeof source[key]) {\n\t\t\t// add functions as event listeners\n\t\t\telement.addEventListener(prefix + key, source[key]);\n\t\t} else if (Object(source[key]) === source[key]) {\n\t\t\t// assign objects as source\n\t\t\t__assignSource(element, source[key], `${prefix + key}-`);\n\t\t} else {\n\t\t\t// otherwise, set attributes\n\t\t\telement.setAttribute(prefix + key, source[key]);\n\t\t}\n\t}\n}\n\n/* Assign an element with attributes, events, and children\n/* ========================================================================== */\n\nfunction $assign(id) {\n\t// $assign(element, { class: 'btn', click: () => { /* listener */ } });\n\t// $assign('button', { aria: { label: 'title' } }, child);\n\t// $assign('div', child1, child2, 'a new text node');\n\t// $assign(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n\n\tconst element = id instanceof Node ? id : document.createElement(id);\n\n\t[].slice.call(arguments, 1).forEach((source) => {\n\t\tif (source instanceof Node) {\n\t\t\t// append sources that are nodes\n\t\t\telement.appendChild(source);\n\t\t} else if ('string' === typeof source) {\n\t\t\t// append strings as text nodes\n\t\t\telement.appendChild(\n\t\t\t\tdocument.createTextNode(source)\n\t\t\t);\n\t\t} else {\n\t\t\t__assignSource(element, source, '');\n\t\t}\n\t});\n\n\treturn element;\n}\n\n/* Dispatch an event from an Element\n/* ========================================================================== */\n\nfunction $dispatchEvent(element, event) {\n\t// $dispatchEvent(element, new CustomEvent('foo', { bubbles: true }));\n\t// $dispatchEvent(element, 'foo', { bubbles: true });\n\n\treturn element.dispatchEvent(\n\t\tevent instanceof Event ? event : $CustomEvent(event, arguments[1])\n\t);\n}\n\n/* Replace all the children of a parent node with new children\n/* ========================================================================== */\n\nfunction $replaceAll(parentNode) {\n\t// $replaceAll(element);\n\t// $replaceAll(element, child1, child2);\n\n\twhile (parentNode.lastChild) {\n\t\tparentNode.removeChild(parentNode.lastChild);\n\t}\n\n\tparentNode.appendChild(\n\t\t__asFragment(arguments)\n\t);\n\n\treturn parentNode;\n}\n\n/* Wrap a child node within an element\n/* ========================================================================== */\n\nfunction $wrapWith(childNode, element) {\n\t// $wrapWith(element, wrappingElement);\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.insertBefore(element, childNode).appendChild(childNode);\n\t}\n\n\treturn childNode;\n}\n\n/* Emerging DOM Functionality\n/* ========================================================================== */\n\nfunction __asFragment(nodes) {\n\tconst fragment = document.createDocumentFragment();\n\n\t[].slice.call(nodes, 1).forEach((node) => {\n\t\tif (node instanceof Node) {\n\t\t\tfragment.appendChild(node);\n\t\t} else {\n\t\t\tfragment.appendChild(\n\t\t\t\tdocument.createTextNode(node)\n\t\t\t);\n\t\t}\n\t});\n\n\treturn fragment;\n}\n\n/* Insert nodes after a child node\n/* ========================================================================== */\n\nfunction $after(childNode) {\n\t// $after(element, sibling1, sibling2, 'a new text node');\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.insertBefore(\n\t\t\t__asFragment(arguments),\n\t\t\tchildNode.nextSibling\n\t\t);\n\t}\n\n\treturn childNode;\n}\n\n/* Appends nodes to a parent node\n/* ========================================================================== */\n\nfunction $append(parentNode) {\n\t// $append(parentNode, child1, child2, 'a new text node');\n\n\tparentNode.append(\n\t\t__asFragment(arguments)\n\t);\n\n\treturn parentNode;\n}\n\n/* Insert nodes before an element\n/* ========================================================================== */\n\nfunction $before(element) {\n\t// $before(element, sibling1, sibling2, 'a new text node');\n\n\tif (element.parentNode) {\n\t\telement.parentNode.insertBefore(\n\t\t\t__asFragment(arguments),\n\t\t\telement\n\t\t);\n\t}\n\n\treturn element;\n}\n\n/* Return the closest ancestor element matching a given selector\n/* ========================================================================== */\n\nfunction $closest(element, selectors) {\n\t// $closest(element, selectors);\n\n\tlet target = element;\n\n\twhile (target && 1 === target.nodeType) {\n\t\tif ($matches(target, selectors)) {\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n}\n\n/* Return whether or not a DOM element matches a given selector\n/* ========================================================================== */\n\nfunction $matches(element, selectors) {\n\t// $matches(element, selectors);\n\n\tconst elements = element.parentNode.querySelectorAll(selectors);\n\n\tlet index = 0;\n\n\twhile (elements[index] && elements[index] !== element) {\n\t\t++index;\n\t}\n\n\treturn Boolean(elements[index]);\n}\n\n/* Prepends a child to a parent node\n/* ========================================================================== */\n\nfunction $prepend(parentNode) {\n\t// $prepend(element, child1, child2, 'a new text node');\n\n\tparentNode.insertBefore(\n\t\t__asFragment(arguments),\n\t\tparentNode.firstChild\n\t);\n\n\treturn parentNode;\n}\n\n/* Remove a child node from its parent\n/* ========================================================================== */\n\nfunction $remove(childNode) {\n\t// $remove(element);\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.removeChild(childNode);\n\t}\n\n\treturn childNode;\n}\n\n/* Replace a child node with nodes\n/* ========================================================================== */\n\nfunction $replaceWith(childNode) {\n\t// $replaceWith(element, sibling1, sibling2, 'a new text node');\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.replaceChild(\n\t\t\t__asFragment(arguments),\n\t\t\tchildNode\n\t\t);\n\t}\n\n\treturn childNode;\n}\n\n/* Emerging Event Functionality\n/* ========================================================================== */\n\n/* Create a new CustomEvent\n/* ========================================================================== */\n\nfunction $CustomEvent(type) {\n\t// element.dispatchEvent(new $CustomEvent('click', { bubbles: true }));\n\n\tconst event = document.createEvent('CustomEvent');\n\tconst param = Object(arguments[1]) || { bubbles: false, cancelable: false, detail: undefined };\n\n\tevent.initCustomEvent(type, param.bubbles, param.cancelable, param.detail);\n\n\treturn event;\n}\n\n/* Fetch response text from a URL and pass it to a callback\n/* ========================================================================== */\n\nfunction $fetch(url, callback) {\n\t// $fetch('api?foo=bar', (responseText) => {});\n\n\tconst xhr = new XMLHttpRequest();\n\n\txhr.addEventListener('readystatechange', () => {\n\t\tif (4 === xhr.readyState && 200 === xhr.status) {\n\t\t\tcallback(xhr.responseText); // eslint-disable-line callback-return\n\t\t}\n\t});\n\n\txhr.open('GET', url);\n\txhr.send();\n\n\treturn xhr;\n}\n\n/* Export\n/* ========================================================================== */\n\nexport {\n\t$assign,\n\t$after,\n\t$append,\n\t$before,\n\t$closest,\n\t$CustomEvent,\n\t$dispatchEvent,\n\t$fetch,\n\t$matches,\n\t$prepend,\n\t$remove,\n\t$replaceAll,\n\t$replaceWith,\n\t$wrapWith\n};\n","import { $assign as $ } from 'esri-global-shared';\n\n/* Language\n/* ========================================================================== */\n\nexport default (data) => {\n\tconst $choice = $('select',\n\t\t{\n\t\t\tclass: `${data.prefix}-choice`,\n\t\t\tautofocus: '',\n\t\t\taria: { label: data.optionsLabel }\n\t\t},\n\t\t...data.options.map(\n\t\t\t(option) => $('option', { value: option.value }, option.label)\n\t\t)\n\t);\n\n\tconst $language = $('form', {\n\t\tclass: data.prefix,\n\t\taria: { labelledby: `${data.prefix}-message`, describedby: 'dialog-description' }\n\t},\n\t\t$('p', { class: `${data.prefix}-message`, id: `${data.prefix}-message` },\n\t\t\t$('strong', data.greetingLabel),\n\t\t\t' ',\n\t\t\tdata.messageLabel\n\t\t),\n\t\t$choice,\n\t\t$('button', {\n\t\t\tclass: `${data.prefix}-submit`,\n\t\t\ttype: 'submit',\n\t\t\taria: { label: `${ data.submitLabel } ${ data.optionsLabel }` }\n\t\t}, data.submitLabel)\n\t);\n\n\t$language.addEventListener('submit', (event) => {\n\t\tevent.preventDefault();\n\n\t\twindow.location.href = $choice.value;\n\t});\n\n\treturn $language;\n};\n"],"names":["__assignSource","element","source","prefix","key","addEventListener","Object","setAttribute","$assign","id","Node","document","createElement","slice","call","arguments","forEach","appendChild","createTextNode","data","$choice","$","label","optionsLabel","options","map","option","value","$language","labelledby","describedby","class","greetingLabel","messageLabel","submitLabel","event","preventDefault","location","href"],"mappings":"yCAGA,SAASA,EAAeC,EAASC,EAAQC,OACnC,IAAIC,KAAOF,EACX,mBAAsBA,EAAOE,KAExBC,iBAAiBF,EAASC,EAAKF,EAAOE,IACpCE,OAAOJ,EAAOE,MAAUF,EAAOE,KAE1BH,EAASC,EAAOE,GAASD,EAASC,SAGzCG,aAAaJ,EAASC,EAAKF,EAAOE,IAQ7C,SAASI,EAAQC,OAMVR,EAAUQ,aAAcC,KAAOD,EAAKE,SAASC,cAAcH,YAE9DI,MAAMC,KAAKC,UAAW,GAAGC,QAAQ,SAACd,GAChCA,aAAkBQ,OAEbO,YAAYf,GACV,iBAAoBA,IAEtBe,YACPN,SAASO,eAAehB,MAGVD,EAASC,EAAQ,MAI3BD,+ICtCQkB,OACTC,EAAUC,gBAAE,gBAENF,EAAKhB,2BACJ,SACHmB,MAAOH,EAAKI,yBAElBJ,EAAKK,QAAQC,IACf,SAACC,UAAWL,EAAE,UAAYM,MAAOD,EAAOC,OAASD,EAAOJ,YAIpDM,EAAYP,EAAE,cACZF,EAAKhB,aACJ0B,WAAeV,EAAKhB,kBAAkB2B,YAAa,uBAE3DT,EAAE,KAAOU,MAAUZ,EAAKhB,kBAAkBM,GAAOU,EAAKhB,mBACrDkB,EAAE,SAAUF,EAAKa,eACjB,IACAb,EAAKc,cAENb,EACAC,EAAE,gBACSF,EAAKhB,sBACT,eACEmB,MAAWH,EAAKe,gBAAiBf,EAAKI,eAC5CJ,EAAKe,uBAGC7B,iBAAiB,SAAU,SAAC8B,KAC/BC,wBAECC,SAASC,KAAOlB,EAAQO,QAGzBC","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}